apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.ipa.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
    spec:
      initContainers:
        # Configures IPA
        - name: {{ .Chart.Name }}-init
          image: "{{ .Values.ipa.image.repository }}:{{ .Values.ipa.image.tag }}"
          imagePullPolicy: {{ .Values.ipa.image.pullPolicy }}
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: container
            value: docker
          securityContext:
            capabilities:
              add:
                - SYS_ADMIN
          args:
            - exit-on-finished
#            - "--hostname={{ .Values.ipa.service.name }}.$(POD_NAMESPACE)"
{{- range $key, $value := .Values.ipa.init.args }}
            - {{ $value }}
{{- end }}
          volumeMounts:
       #     - name: data
       #       mountPath: /data
            - name: cgroups
              mountPath: /sys/fs/cgroup
              readOnly: true
            - name: run
              mountPath: /run
            - name: run-sysd
              mountPath: /run/systemd
            - name: tmp
              mountPath: /tmp
      containers:
        # Runs IPA
        - name: {{ .Chart.Name }}
          image: "{{ .Values.ipa.image.repository }}:{{ .Values.ipa.image.tag }}"
          imagePullPolicy: {{ .Values.ipa.image.pullPolicy }}
          ports:
{{- range $key, $value := .Values.ipa.service.ports }}
            - containerPort: {{ $value.targetPort }}
              protocol: {{ $value.protocol }}
{{- end }}
          #livenessProbe:
          #  httpGet:
          #    path: /
          #    port: 80
          #readinessProbe:
          #  httpGet:
          #    path: /
          #    port: 80
          resources:
{{ toYaml .Values.ipa.resources | indent 12 }}
          #securityContext:
          #  capabilities:
          #    add:
          #      - SYS_ADMIN
          volumeMounts:
            - name: data
              mountPath: /data
            - name: cgroups
              mountPath: /sys/fs/cgroup
              readOnly: true
            - name: run
              mountPath: /run
            - name: tmp
              mountPath: /tmp
    {{- if .Values.ipa.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.ipa.nodeSelector | indent 8 }}
    {{- end }}
      volumes:
        - name: data
      {{- if .Values.ipa.persistentVolume.enabled }}
          persistentVolumeClaim:
            claimName: {{ template "fullname" . }}
      {{- else }}
          emptyDir: {}
      {{- end }}
        - name: cgroups
          hostPath:
            path: /sys/fs/cgroup
        - name: run
          emptyDir: {}
#            medium: Memory
        - name: run-sysd
          emptyDir: {}
#            medium: Memory
        - name: tmp
          emptyDir: {}
#            medium: Memory
